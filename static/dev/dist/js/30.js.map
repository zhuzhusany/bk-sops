{"version":3,"sources":["webpack:///./src/pages/task/TaskList/TaskCloneDialog.vue","webpack:///./src/pages/task/TaskList/TaskCloneDialog.vue?e079","webpack:///./src/pages/task/TaskList/index.vue?185e","webpack:///./src/pages/task/TaskList/index.vue?ff6c","webpack:///./src/pages/task/TaskList/index.vue?bd98","webpack:///./src/pages/task/TaskList/TaskCloneDialog.vue?2926","webpack:///./src/pages/task/TaskList/TaskCloneDialog.vue?78f1","webpack:///./src/pages/task/TaskList/index.vue","webpack:///./src/pages/task/TaskList/index.vue?1f75","webpack:///src/pages/task/TaskList/index.vue","webpack:///./src/pages/task/TaskList/TaskCloneDialog.vue?ae71","webpack:///src/pages/task/TaskList/TaskCloneDialog.vue"],"names":["__webpack_require__","r","__webpack_exports__","_TaskCloneDialog_vue_vue_type_template_id_14f040da_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_TaskCloneDialog_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","__WEBPACK_IMPORT_KEY__","key","d","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__","component","Object","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_node_modules_sass_loader_lib_loader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_TaskCloneDialog_vue_vue_type_style_index_0_id_14f040da_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","n","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_node_modules_sass_loader_lib_loader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_5a0bb192_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","title","i18n","task_list","_v","theme","on","click","onCreateTask","_s","create","input-placeholader","taskNamePlaceholder","onShow","onAdvanceShow","input","onSearchInput","model","value","callback","$$v","flowName","expression","directives","name","rawName","start_time","ref","placeholder","dateRange","type","change","onChangeExecuteTime","TimeRange","task_type","popover-width","searchable","is-loading","taskBasicInfoLoading","taskTypePlaceholder","clear","onClearCategory","selected","onSelectedCategory","taskSync","_l","option","index","id","createMethod","createMethodPlaceholder","onClearCreateMethod","onSelectedCreateMethod","creator","clearable","creatorPlaceholder","executor","executorPlaceholder","status","statusPlaceholder","onClearStatus","onSelectedStatus","statusSync","searchInputhandler","query","onResetForm","reset","isLoading","listLoading","opacity","data","taskList","pagination","page-change","onPageChange","label","prop","width","task_name","scopedSlots","_u","fn","props","row","to","cc_id","finish_time","executor_name","transformCreateMethod","create_method","class","executeStatus","$index","cls","text","_e","operation","href","$event","preventDefault","onCloneTaskClick","clone","onDeleteTask","delete","slot","message","empty","common","is-new-task-dialog-show","isNewTaskDialogShow","business-info-loading","businessInfoLoading","create-entrance","task-category","taskCategory","onCreateTaskCancel","is-task-clone-dialog-show","isTaskCloneDialogShow","task-name","theCloneTaskName","pending","confirm","onCloneConfirm","cancel","onCloneCancel","ext-cls","mask-close","header-position","isDeleteDialogShow","onDeleteConfirm","onDeleteCancel","deleleTip","theDeleteTaskName","staticRenderFns","onConfirm","onCancel","template","errors","has","first","_index_vue_vue_type_template_id_5a0bb192_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_vuex","_errorHandler","components","CopyrightFooter","_CopyrightFooter2","default","BaseTitle","_BaseTitle2","AdvanceSearch","_AdvanceSearch2","NoData","_NoData2","TaskCreateDialog","_TaskCreateDialog2","TaskCloneDialog","_TaskCloneDialog2","templateId","$route","template_id","activeTaskCategory","searchStr","totalPage","shapeShow","isAdvancedSerachShow","theDeleteTaskId","theCloneTaskId","allCategory","gettext","total","item","comma","currentPageTip","page","createMethodApp","createMethodAppmaker","advanceSearch","executing","pauseState","executeStartTime","executeEndTime","category","statusList","isStarted","isFinished","taskCreateMethodList","current","count","limit","limit-list","show-limit","computed","_extends3","mapState","state","taskListData","businessTimezone","created","getData","_tools2","debounce","methods","mapActions","mapMutations","getTaskList","_this","_asyncToGenerator3","_regenerator2","mark","_callee","list","wrap","_context","prev","next","offset","pipeline_instance__creator__contains","pipeline_instance__executor__contains","pipeline_instance__name__contains","pipeline_instance__is_started","pipeline_instance__is_finished","_momentTimezone2","format","add","tz","loadTaskList","sent","objects","meta","total_count","Math","ceil","map","is_finished","is_started","getExecuteDetail","setTaskListData","t0","errorHandler","finish","stop","task","_this2","_callee2","detailInfo","_context2","instance_id","business","getInstanceStatus","result","abrupt","splice","t1","getBizBaseInfo","_this3","_callee3","bizBasicInfo","_context3","loadBusinessBaseInfo","task_categories","m","setBusinessBaseInfo","onCategoryClick","_this4","_callee4","_context4","deleteTask","_this5","_callee5","config","_context5","task_id","cloneTask","$router","push","path","new_instance_id","oldValue","newValue","getCreateMethod","_this6","_callee6","createMethodData","_context6","loadCreateMethod","_this7","_callee7","_context7","_promise2","all","catch","e","length","find","taskCreateMethod","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_TaskCloneDialog_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_TaskCloneDialog_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_index","taskName","slice","STRING_LENGTH","TASK_NAME_MAX_LENGTH","taskNameRule","required","max","regex","NAME_REG","watch","val","$validator","validateAll","then","trim","$emit"],"mappings":";;;;;;2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,yEAAA,MAAAI,EAAAJ,uDAAA,aAAAK,KAAAD,EAAA,YAAAC,GAAA,SAAAC,GAAAN,EAAAO,EAAAL,EAAAI,EAAA,kBAAAF,EAAAE,KAAA,CAAAD,GAAAL,wFAAA,UAAAQ,EAAAR,+EAAA,GAQAS,EAAgBC,OAAAF,EAAA,EAAAE,CACdN,EAAA,QACAD,EAAA,EACAA,EAAA,KAEF,KACA,WACA,MAIeD,EAAA,QAAAO;;;;;2FCnBf,IAAAE,EAAAX,4ZAAA,KAAAA,EAAAY,EAAAD,GAAod;;;;;2FCApd,IAAAE,EAAAb,kZAAA,KAAAA,EAAAY,EAAAC,GAA0c;;;;;yECA1c,IAAAC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,iBAA2BF,EAAA,aAAkBG,MAAMA,CAACC,MAAAR,EAAAS,KAAAC,aAA4BV,EAAAW,GAAA,KAAAP,EAAA,OAAwBE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,4BAAsCF,EAAA,aAAkBE,YAAA,WAAAC,OAA8BK,MAAA,WAAkBC,IAAKC,MAAAd,EAAAe,gBAA0Bf,EAAAW,GAAA,yBAAAX,EAAAgB,GAAAhB,EAAAS,KAAAQ,QAAA,wBAAAjB,EAAAW,GAAA,KAAAP,EAAA,OAAwGE,YAAA,yBAAmCF,EAAA,iBAAsBE,YAAA,cAAAC,OAAiCW,qBAAAlB,EAAAS,KAAAU,qBAAkDN,IAAKO,OAAApB,EAAAqB,cAAAC,MAAAtB,EAAAuB,eAAqDC,OAAQC,MAAAzB,EAAA,SAAA0B,SAAA,SAAAC,GAA8C3B,EAAA4B,SAAAD,GAAiBE,WAAA,eAAwB,SAAA7B,EAAAW,GAAA,KAAAP,EAAA,OAAkC0B,WAAWA,CAACA,CAACC,KAAA,OAAAC,QAAA,SAAAP,MAAAzB,EAAA,qBAAA6B,WAAA,yBAAgGvB,YAAA,gBAA4BF,EAAA,YAAiBE,YAAA,kBAA4BF,EAAA,OAAYE,YAAA,uBAAiCF,EAAA,OAAYE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAwB,eAAAjC,EAAAW,GAAA,KAAAP,EAAA,kBAAyE8B,IAAA,WAAA3B,OAAsB4B,YAAAnC,EAAAS,KAAA2B,UAAAC,KAAA,aAAoDxB,IAAKyB,OAAAtC,EAAAuC,qBAAiCf,OAAQC,MAAAzB,EAAA,UAAA0B,SAAA,SAAAC,GAA+C3B,EAAAwC,UAAAb,GAAkBE,WAAA,gBAAyB,GAAA7B,EAAAW,GAAA,KAAAP,EAAA,OAA4BE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAgC,cAAAzC,EAAAW,GAAA,KAAAP,EAAA,aAAmEE,YAAA,mBAAAC,OAAsCmC,gBAAA,IAAAC,cAAAC,aAAA5C,EAAA6C,qBAAAV,YAAAnC,EAAAS,KAAAqC,qBAAuHjC,IAAKkC,MAAA/C,EAAAgD,gBAAAC,SAAAjD,EAAAkD,oBAA8D1B,OAAQC,MAAAzB,EAAA,SAAA0B,SAAA,SAAAC,GAA8C3B,EAAAmD,SAAAxB,GAAiBE,WAAA,aAAwB7B,EAAAoD,GAAApD,EAAA,sBAAAqD,EAAAC,GAAkD,OAAAlD,EAAA,aAAuBb,IAAA+D,EAAA/C,OAAiBgD,GAAAF,EAAAE,GAAAxB,KAAAsB,EAAAtB,UAAqC,OAAA/B,EAAAW,GAAA,KAAAP,EAAA,OAA+BE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAA+C,iBAAAxD,EAAAW,GAAA,KAAAP,EAAA,aAAsEE,YAAA,mBAAAC,OAAsCmC,gBAAA,IAAAC,cAAAC,aAAA5C,EAAA6C,qBAAAV,YAAAnC,EAAAS,KAAAgD,yBAA2H5C,IAAKkC,MAAA/C,EAAA0D,oBAAAT,SAAAjD,EAAA2D,wBAAsEnC,OAAQC,MAAAzB,EAAA,aAAA0B,SAAA,SAAAC,GAAkD3B,EAAAwD,aAAA7B,GAAqBE,WAAA,iBAA4B7B,EAAAoD,GAAApD,EAAA,8BAAAqD,EAAAC,GAA0D,OAAAlD,EAAA,aAAuBb,IAAA+D,EAAA/C,OAAiBgD,GAAAF,EAAAE,GAAAxB,KAAAsB,EAAAtB,UAAqC,OAAA/B,EAAAW,GAAA,KAAAP,EAAA,OAA+BE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAmD,YAAA5D,EAAAW,GAAA,KAAAP,EAAA,YAAgEE,YAAA,kBAAAC,OAAqCsD,aAAA1B,YAAAnC,EAAAS,KAAAqD,oBAA2DtC,OAAQC,MAAAzB,EAAA,QAAA0B,SAAA,SAAAC,GAA6C3B,EAAA4D,QAAAjC,GAAgBE,WAAA,cAAuB,GAAA7B,EAAAW,GAAA,KAAAP,EAAA,OAA4BE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAsD,aAAA/D,EAAAW,GAAA,KAAAP,EAAA,YAAiEE,YAAA,kBAAAC,OAAqCsD,aAAA1B,YAAAnC,EAAAS,KAAAuD,qBAA4DxC,OAAQC,MAAAzB,EAAA,SAAA0B,SAAA,SAAAC,GAA8C3B,EAAA+D,SAAApC,GAAiBE,WAAA,eAAwB,GAAA7B,EAAAW,GAAA,KAAAP,EAAA,OAA4BE,YAAA,kBAA4BF,EAAA,QAAaE,YAAA,eAAyBN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAwD,WAAAjE,EAAAW,GAAA,KAAAP,EAAA,aAAgEE,YAAA,mBAAAC,OAAsCmC,gBAAA,IAAAC,cAAAC,aAAA5C,EAAA6C,qBAAAV,YAAAnC,EAAAS,KAAAyD,mBAAqHrD,IAAKkC,MAAA/C,EAAAmE,cAAAlB,SAAAjD,EAAAoE,kBAA0D5C,OAAQC,MAAAzB,EAAA,WAAA0B,SAAA,SAAAC,GAAgD3B,EAAAqE,WAAA1C,GAAmBE,WAAA,eAA0B7B,EAAAoD,GAAApD,EAAA,oBAAAqD,EAAAC,GAAgD,OAAAlD,EAAA,aAAuBb,IAAA+D,EAAA/C,OAAiBgD,GAAAF,EAAAE,GAAAxB,KAAAsB,EAAAtB,UAAqC,OAAA/B,EAAAW,GAAA,KAAAP,EAAA,OAA+BE,YAAA,iBAA2BF,EAAA,aAAkBE,YAAA,gBAAAC,OAAmCK,MAAA,WAAkBC,IAAKC,MAAAd,EAAAsE,sBAAgCtE,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAA8D,UAAAvE,EAAAW,GAAA,KAAAP,EAAA,aAA+DE,YAAA,eAAAO,IAA+BC,MAAAd,EAAAwE,eAAyBxE,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAgE,WAAA,SAAAzE,EAAAW,GAAA,KAAAP,EAAA,OAAmEE,YAAA,uBAAiCF,EAAA,YAAiB0B,WAAWA,CAACA,CAACC,KAAA,YAAAC,QAAA,cAAAP,OAA+CiD,UAAA1E,EAAA2E,YAAAC,QAAA,GAAyC/C,WAAA,2CAAsDtB,OAASsE,KAAA7E,EAAA8E,SAAAC,WAAA/E,EAAA+E,YAAgDlE,IAAKmE,cAAAhF,EAAAiF,gBAAgC7E,EAAA,mBAAwBG,MAAMA,CAAC2E,MAAA,KAAAC,KAAA,KAAAC,MAAA,QAAuCpF,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAA4E,UAAAF,KAAA,QAAyCG,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANrF,EAAA,eAA0BE,YAAA,YAAAC,OAA+BC,MAAAiF,EAAAC,IAAA3D,KAAA4D,GAAA,qBAAA3F,EAAA4F,MAAA,iBAAAH,EAAAC,IAAA,MAAoG1F,EAAAW,GAAA,iCAAAX,EAAAgB,GAAAyE,EAAAC,IAAA3D,MAAA,uCAAsG/B,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAwB,WAAAkD,KAAA,iBAAmDG,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANzF,EAAAW,GAAA,6BAAAX,EAAAgB,GAAAyE,EAAAC,IAAAzD,YAAA,uCAAgHjC,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAoF,aAA6BP,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANzF,EAAAW,GAAA,6BAAAX,EAAAgB,GAAAyE,EAAAC,IAAAG,aAAA,uCAAiH7F,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAgC,UAAA0C,KAAA,mBAAmDnF,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAmD,QAAAuB,KAAA,eAAAC,MAAA,SAA8DpF,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAsD,SAAAqB,MAAA,OAAwCE,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANzF,EAAAW,GAAA,6BAAAX,EAAAgB,GAAAyE,EAAAC,IAAAI,eAAA,uCAAmH9F,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAA+C,aAAA4B,MAAA,MAA2CE,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANzF,EAAAW,GAAA,6BAAAX,EAAAgB,GAAAhB,EAAA+F,sBAAAN,EAAAC,IAAAM,gBAAA,iCAAsIhG,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAAwD,OAAAmB,MAAA,OAAsCE,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANrF,EAAA,OAAkBE,YAAA,gBAA0BF,EAAA,QAAa6F,MAAAjG,EAAAkG,cAAAT,EAAAU,SAAAnG,EAAAkG,cAAAT,EAAAU,QAAAC,MAA6EpG,EAAAW,GAAA,KAAAX,EAAAkG,cAAAT,EAAAU,QAAA/F,EAAA,QAA2DE,YAAA,qBAA+BN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAkG,cAAAT,EAAAU,QAAAE,SAAArG,EAAAsG,cAAyEtG,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAAC2E,MAAAlF,EAAAS,KAAA8F,UAAAnB,MAAA,OAAyCE,YAAAtF,EAAAuF,KAAsBhG,IAAA,UAAAiG,GAAA,SAAAC,GAAiC,MAAM,CAANrF,EAAA,OAAkBE,YAAA,mBAA6BF,EAAA,KAAUE,YAAA,uBAAAC,OAA0CiG,KAAA,uBAA6B3F,IAAKC,MAAA,SAAA2F,GAAiD,OAAxBA,EAAAC,iBAAwB1G,EAAA2G,iBAAAlB,EAAAC,IAAAnC,GAAAkC,EAAAC,IAAA3D,UAA4D/B,EAAAW,GAAA,qCAAAX,EAAAgB,GAAAhB,EAAAS,KAAAmG,OAAA,oCAAA5G,EAAAW,GAAA,KAAAP,EAAA,KAA6HE,YAAA,wBAAAC,OAA2CiG,KAAA,uBAA6B3F,IAAKC,MAAA,SAAA2F,GAAiD,OAAxBA,EAAAC,iBAAwB1G,EAAA6G,aAAApB,EAAAC,IAAAnC,GAAAkC,EAAAC,IAAA3D,UAAwD/B,EAAAW,GAAA,qCAAAX,EAAAgB,GAAAhB,EAAAS,KAAAqG,QAAA,6CAAiH9G,EAAAW,GAAA,KAAAP,EAAA,OAAwBE,YAAA,aAAAC,OAAgCwG,KAAA,SAAeA,KAAA,UAAc3G,EAAA,UAAeG,MAAMA,CAACyG,QAAAhH,EAAAS,KAAAwG,UAA0B,eAAAjH,EAAAW,GAAA,KAAAP,EAAA,mBAAAJ,EAAAW,GAAA,KAAAP,EAAA,oBAAuFG,MAAMA,CAAC2G,OAAAlH,EAAAkH,OAAAtB,MAAA5F,EAAA4F,MAAAuB,0BAAAnH,EAAAoH,oBAAAC,wBAAArH,EAAAsH,oBAAAC,qBAAAC,gBAAAxH,EAAAyH,cAAgM5G,IAAK6G,mBAAA1H,EAAA0H,sBAA6C1H,EAAAW,GAAA,KAAAP,EAAA,mBAAoCG,MAAMA,CAACoH,4BAAA3H,EAAA4H,sBAAAC,YAAA7H,EAAA8H,iBAAAC,QAAA/H,EAAA+H,QAAAnB,OAAmH/F,IAAKmH,QAAAhI,EAAAiI,eAAAC,OAAAlI,EAAAmI,iBAAyDnI,EAAAW,GAAA,KAAAP,EAAA,aAA8BG,MAAMA,CAAC6E,MAAA,MAAAgD,UAAA,gBAAAxH,MAAA,UAAAyH,gBAAAC,kBAAA,OAAA9H,MAAAR,EAAAS,KAAAqG,OAAArF,MAAAzB,EAAAuI,oBAA6J1H,IAAKmH,QAAAhI,EAAAwI,gBAAAN,OAAAlI,EAAAyI,kBAA2DrI,EAAA,OAAY0B,WAAWA,CAACA,CAACC,KAAA,YAAAC,QAAA,cAAAP,OAA+CiD,UAAA1E,EAAA+H,QAAAjB,OAAAlC,QAAA,GAA4C/C,WAAA,8CAAyDvB,YAAA,mBAA+BN,EAAAW,GAAA,iBAAAX,EAAAgB,GAAAhB,EAAAS,KAAAiI,UAAA,IAAA1I,EAAA2I,kBAAA,6BAC5hRC,KCDA3J,EAAAO,EAAAL,EAAA,sBAAAY,IAAAd,EAAAO,EAAAL,EAAA,sBAAAyJ;;;;;yECAA,IAAA7I,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,aAAuBG,MAAMA,CAAC6E,MAAA,MAAAgD,UAAA,gBAAAxH,MAAA,UAAAyH,gBAAAC,kBAAA,OAAA9H,MAAAR,EAAAS,KAAAD,MAAAiB,MAAAzB,EAAA4H,uBAA+J/G,IAAKmH,QAAAhI,EAAA6I,UAAAX,OAAAlI,EAAA8I,YAA+C1I,EAAA,OAAY0B,WAAWA,CAACA,CAACC,KAAA,YAAAC,QAAA,cAAAP,OAA+CiD,UAAA1E,EAAA+H,QAAAnD,QAAA,GAAqC/C,WAAA,uCAAkDvB,YAAA,kBAA8BF,EAAA,OAAYE,YAAA,qBAA+BF,EAAA,SAAAJ,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAS,KAAAsI,aAAA/I,EAAAW,GAAA,KAAAP,EAAA,OAAwEE,YAAA,wBAAkCF,EAAA,YAAiB0B,WAAWA,CAACA,CAACC,KAAA,WAAAC,QAAA,aAAAP,MAAAzB,EAAA,aAAA6B,WAAA,iBAAwFtB,OAASwB,KAAA,YAAkBP,OAAQC,MAAAzB,EAAA,KAAA0B,SAAA,SAAAC,GAA0C3B,EAAA+B,KAAAJ,GAAaE,WAAA,UAAoB7B,EAAAW,GAAA,KAAAX,EAAAgJ,OAAAC,IAAA,YAAA7I,EAAA,QAAsDE,YAAA,+BAAyCN,EAAAW,GAAAX,EAAAgB,GAAAhB,EAAAgJ,OAAAE,MAAA,gBAAAlJ,EAAAsG,MAAA,UAC/9BsC,KCDA3J,EAAAO,EAAAL,EAAA,sBAAAY,IAAAd,EAAAO,EAAAL,EAAA,sBAAAyJ;;;;;;2FCAA3J,EAAAC,EAAAC,GAAA,IAAAgK,EAAAlK,+DAAA,MAAAmK,EAAAnK,6CAAA,aAAAK,KAAA8J,EAAA,YAAA9J,GAAA,SAAAC,GAAAN,EAAAO,EAAAL,EAAAI,EAAA,kBAAA6J,EAAA7J,KAAA,CAAAD,GAAAL,8EAAA,UAAAQ,EAAAR,+EAAA,GAQAS,EAAgBC,OAAAF,EAAA,EAAAE,CACdyJ,EAAA,QACAD,EAAA,EACAA,EAAA,KAEF,KACA,WACA,MAIehK,EAAA,QAAAO;;;;;;2FCnBfT,EAAAC,EAAAC,GAAA,IAAAkK,EAAApK,qJAAA,KAAAqK,EAAArK,EAAAY,EAAAwJ,GAAA,QAAA/J,KAAA+J,EAAA,YAAA/J,GAAA,SAAAC,GAAAN,EAAAO,EAAAL,EAAAI,EAAA,kBAAA8J,EAAA9J,KAAA,CAAAD,GAAiMH,EAAA,QAAAmK,EAAG;;;;;;2VCwOpMrK,wBAAA,GACA,IAAAsK,EAAAtK,aAAA,IACAuK,EAAAvK,gCAAA,SACAA,yBAAA,UACAA,gDAAA,UACAA,+CAAA,UACAA,mDAAA,UACAA,+BAAA,UACAA,4CAAA,UACAA,wBAAA,UACAA,8BAAA,qEAEA8C,KAAA,WACA0H,YACAC,gBAAAC,EAAAC,QACAC,UAAAC,EAAAF,QACAG,cAAAC,EAAAJ,QACAK,OAAAC,EAAAN,QACAO,iBAAAC,EAAAR,QACAS,gBAAAC,EAAAV,SAEAnE,OAAA,kCACAZ,KAXA,WAYA,OACAF,eACA4F,WAAAtK,KAAAuK,OAAAjG,MAAAkG,YACAhD,gBACAiD,0BACAC,UAAA,GACAzE,iBACA1D,WAAA,OACAoI,UAAA,EACArC,sBACAsC,aACAC,wBACAC,uBACApC,kBAAA,GACAf,yBACAR,uBACAE,uBACAQ,iBAAA,GACAkD,sBACAjD,SACAjB,UACAF,UAEAnG,MACAwK,YAAAC,QAAA,MACA/I,YAAA+I,QAAA,cACAxK,UAAAwK,QAAA,QACA7F,UAAA6F,QAAA,QACAjJ,WAAAiJ,QAAA,QACArF,YAAAqF,QAAA,QACAzI,UAAAyI,QAAA,QACAtH,QAAAsH,QAAA,OACAnH,SAAAmH,QAAA,OACAjH,OAAAiH,QAAA,MACA3E,UAAA2E,QAAA,MACAtE,MAAAsE,QAAA,MACApE,OAAAoE,QAAA,MACAxC,UAAAwC,QAAA,QACAC,MAAAD,QAAA,KACAE,KAAAF,QAAA,OACAG,MAAAH,QAAA,KACAI,eAAAJ,QAAA,OACAK,KAAAL,QAAA,KACA/J,oBAAA+J,QAAA,WACApI,oBAAAoI,QAAA,SACApH,mBAAAoH,QAAA,UACAlH,oBAAAkH,QAAA,UACAhH,kBAAAgH,QAAA,SACA3G,MAAA2G,QAAA,MACAzG,MAAAyG,QAAA,MACA1H,aAAA0H,QAAA,QACAM,gBAAAN,QAAA,OACAO,qBAAAP,QAAA,OACAzH,wBAAAyH,QAAA,WACAQ,cAAAR,QAAA,QACAS,UAAAT,QAAA,OACAU,WAAAV,QAAA,MACAjK,OAAAiK,QAAA,MACA9I,UAAA8I,QAAA,aAEAW,wBACAC,sBACAlK,gBACAmK,gBACAnI,eACAG,gBACAZ,SAAA,GACA6I,aACAzI,GAAA,eAAAxB,KAAAmJ,QAAA,SACA3H,GAAA,SAAAxB,KAAAmJ,QAAA,SACA3H,GAAA,WAAAxB,KAAAmJ,QAAA,QAEArI,wBACAoJ,iBACAC,kBACA7H,WAAA,GACA8H,wBACA3I,aAAAvD,KAAA+F,eAAA,GACAjB,YACAqH,QAAA,EACAC,MAAA,EACAC,MAAA,GACAC,cAAA,IACAC,mBAIAC,YAAAC,EAAA9C,eACAL,EAAAoD,WACA7H,SAAA,SAAA8H,GAAA,OAAAA,EAAA9H,SAAA+H,cACAC,iBAAA,SAAAF,GAAA,OAAAA,EAAAE,qBAGAC,QAzGA,WA0GA9M,KAAA+M,UACA/M,KAAAsB,cAAA0L,EAAArD,QAAAsD,SAAAjN,KAAAqE,mBAAA,MAEA6I,WAAAT,EAAA9C,eACAL,EAAA6D,YAAA,aACA,4BAEA7D,EAAA6D,YAAA,SACA,oBACA,wBAEA7D,EAAA6D,YAAA,aACA,eACA,aACA,iBAEA7D,EAAA8D,cAAA,aACA,2BAEA9D,EAAA8D,cAAA,aACA,qBAEAC,YAnBA,WAmBA,IAAAC,EAAAtN,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAAC,IAAA,IAAA9I,EAAAgI,EAAAe,EAAAhD,EAAA,OAAA6C,EAAA7D,QAAAiE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aAEA,KAAAT,EAAA1B,mBACA0B,EAAA1B,yBAEA0B,EAAA5I,eACA4I,EAAArH,iBANA4H,EAAAC,KAAA,EAQAlJ,GACAyH,MAAAiB,EAAAxI,WAAAuH,MACA2B,QAAAV,EAAAxI,WAAAqH,QAAA,GAAAmB,EAAAxI,WAAAuH,MACAP,SAAAwB,EAAA7C,mBACAD,YAAA8C,EAAAhD,WACArD,OAAAqG,EAAArG,OACAgH,qCAAAX,EAAA3J,QACAuK,sCAAAZ,EAAAxJ,SACAqK,kCAAAb,EAAA3L,SACAyM,8BAAAd,EAAAtB,UACAqC,+BAAAf,EAAArB,WACAlG,cAAAuH,EAAA/J,sBAEA+J,EAAAzB,iBACAyB,EAAArG,QACArC,EAAA,sCAAA0J,EAAA3E,SAAA2D,EAAA1B,kBAAA2C,OAAA,cACA3J,EAAA,sCAAA0J,EAAA3E,SAAA2D,EAAAzB,gBAAA2C,IAAA,SAAAD,OAAA,gBAEA3J,EAAA,mCAAA0J,EAAA3E,QAAA8E,GAAAnB,EAAA1B,iBAAA0B,EAAAT,kBAAA0B,OAAA,cACA3J,EAAA,mCAAA0J,EAAA3E,QAAA8E,GAAAnB,EAAAzB,eAAAyB,EAAAT,kBAAA2B,IAAA,SAAAD,OAAA,gBA3BAV,EAAAE,KAAA,EA8BAT,EAAAoB,aAAA9J,GA9BA,OA8BAgI,EA9BAiB,EAAAc,KA+BAhB,EAAAf,EAAAgC,QACAtB,EAAAxI,WAAAsH,MAAAQ,EAAAiC,KAAAC,YACAnE,EAAAoE,KAAAC,KAAA1B,EAAAxI,WAAAsH,MAAAkB,EAAAxI,WAAAuH,OAIAiB,EAAA3C,UAHAA,GACA,EAIA2C,EAAArH,cAAA0H,EAAAsB,IAAA,SAAA9D,EAAA9H,GACA,IAAAW,KAWA,OAVAmH,EAAA+D,aACAlL,EAAAmC,IAAA,2CACAnC,EAAAoC,KAAA6E,QAAA,OACAE,EAAAgE,YACAnL,EAAAmC,IAAA,8BACAmH,EAAA8B,iBAAAjE,EAAA9H,KAEAW,EAAAmC,IAAA,wCACAnC,EAAAoC,KAAA6E,QAAA,QAEAjH,IAEAsJ,EAAA+B,gBAAA1B,GArDAE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,YAuDAtE,EAAAgG,cAAA1B,EAAAyB,GAAAhC,GAvDA,eAAAO,EAAAC,KAAA,GAyDAR,EAAA5I,eAzDAmJ,EAAA2B,OAAA,6BAAA3B,EAAA4B,SAAA/B,EAAAJ,IAAA,oBA4DA8B,iBA/EA,SA+EAM,EAAArM,GAAA,IAAAsM,EAAA3P,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAAmC,IAAA,IAAAhL,EAAAiL,EAAAlD,EAAA3I,EAAA,OAAAwJ,EAAA7D,QAAAiE,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cACAnJ,GACAmL,YAAAL,EAAApM,GACAqC,MAAA+J,EAAAM,SAAArK,OAHAmK,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAMA4B,EAAAM,kBAAArL,GANA,YAMAiL,EANAC,EAAAnB,MAOAuB,OAPA,CAAAJ,EAAA/B,KAAA,SAQApB,EAAAkD,EAAAjL,KAAA+H,MACA3I,KATA8L,EAAAR,GAUA3C,EAVAmD,EAAA/B,KAWA,YAXA+B,EAAAR,GAAA,GAYA,YAZAQ,EAAAR,GAAA,GAgBA,cAhBAQ,EAAAR,GAAA,GAoBA,mBApBAQ,EAAAR,GAAA,GAwBA,WAxBAQ,EAAAR,GAAA,GA4BA,YA5BAQ,EAAAR,GAAA,2BAaAtL,EAAAmC,IAAA,2CACAnC,EAAAoC,KAAA6E,QAAA,OAdA6E,EAAAK,OAAA,2BAiBAnM,EAAAmC,IAAA,wCACAnC,EAAAoC,KAAA6E,QAAA,MAlBA6E,EAAAK,OAAA,2BAqBAnM,EAAAmC,IAAA,wCACAnC,EAAAoC,KAAA6E,QAAA,QAtBA6E,EAAAK,OAAA,2BAyBAnM,EAAAmC,IAAA,uCACAnC,EAAAoC,KAAA6E,QAAA,MA1BA6E,EAAAK,OAAA,2BA6BAnM,EAAAmC,IAAA,uCACAnC,EAAAoC,KAAA6E,QAAA,MA9BA6E,EAAAK,OAAA,oBAiCAnM,EAAAoC,KAAA6E,QAAA,MAjCA,QAmCA0E,EAAA1J,cAAAmK,OAAA/M,EAAA,EAAAW,GAnCA8L,EAAA/B,KAAA,oBAqCAxE,EAAAgG,cAAAM,EAAAF,GArCA,QAAAG,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAO,GAAAP,EAAA,YAwCAvG,EAAAgG,cAAAO,EAAAO,GAAAV,GAxCA,yBAAAG,EAAAL,SAAAG,EAAAD,IAAA,cA2CAW,eA1HA,WA0HA,IAAAC,EAAAvQ,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAA+C,IAAA,IAAAC,EAAA,OAAAjD,EAAA7D,QAAAiE,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAEAwC,EAAAI,uBAFA,OAEAF,EAFAC,EAAA/B,KAGA4B,EAAA/I,aAAAiJ,EAAAG,gBAAA3B,IAAA,SAAA4B,GAAA,OAAAvN,GAAAuN,EAAArP,MAAAM,KAAA+O,EAAA/O,QACAyO,EAAAO,oBAAAL,GACAF,EAAA3N,wBALA8N,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAApB,GAAAoB,EAAA,YAOAnH,EAAAgG,cAAAmB,EAAApB,GAAAiB,GAPA,yBAAAG,EAAAjB,SAAAe,EAAAD,IAAA,aAUAQ,gBApIA,SAoIAjF,GACA9L,KAAAyK,mBAAAqB,EACA9L,KAAA8E,WAAAqH,QAAA,EACAnM,KAAAqN,eAEAhJ,mBAzIA,WA0IArE,KAAA8E,WAAAqH,QAAA,EACAnM,KAAAqN,eAEAzG,aA7IA,SA6IAtD,EAAAxB,GACA9B,KAAA8K,gBAAAxH,EACAtD,KAAA0I,kBAAA5G,EACA9B,KAAAsI,uBAEAC,gBAlJA,WAkJA,IAAAyI,EAAAhR,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAAwD,IAAA,OAAAzD,EAAA7D,QAAAiE,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,WACAiD,EAAAlJ,QAAAjB,OADA,CAAAqK,EAAAnD,KAAA,eAAAmD,EAAAf,OAAA,wBAEAa,EAAAlJ,QAAAjB,UAFAqK,EAAApD,KAAA,EAAAoD,EAAAnD,KAAA,EAIAiD,EAAAG,WAAAH,EAAAlG,iBAJA,cAKAkG,EAAAlG,uBACAkG,EAAAtI,kBAAA,GAGAsI,EAAAlM,WAAAqH,QAAA,GACA6E,EAAArG,YAAAqG,EAAAlM,WAAAqH,SACA6E,EAAAlM,WAAAsH,OAAA4E,EAAArG,UAAA,GAAAqG,EAAAlM,WAAAuH,OAAA,IAEA2E,EAAAlM,WAAAqH,SAAA,GAbA+E,EAAAnD,KAAA,GAeAiD,EAAA3D,cAfA,QAAA6D,EAAAnD,KAAA,iBAAAmD,EAAApD,KAAA,GAAAoD,EAAA5B,GAAA4B,EAAA,YAiBA3H,EAAAgG,cAAA2B,EAAA5B,GAAA0B,GAjBA,eAAAE,EAAApD,KAAA,GAmBAkD,EAAA1I,sBACA0I,EAAAlJ,QAAAjB,UApBAqK,EAAA1B,OAAA,6BAAA0B,EAAAzB,SAAAwB,EAAAD,IAAA,oBAuBAxI,eAzKA,WA0KAxI,KAAA8K,uBACA9K,KAAA0I,kBAAA,GACA1I,KAAAsI,uBAEA5B,iBA9KA,SA8KApD,EAAAxB,GACA9B,KAAA2H,yBACA3H,KAAA+K,eAAAzH,EACAtD,KAAA6H,iBAAA/F,GAEAkG,eAnLA,SAmLAlG,GAAA,IAAAsP,EAAApR,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAA4D,IAAA,IAAAC,EAAA1M,EAAA,OAAA4I,EAAA7D,QAAAiE,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,WACAqD,EAAAtJ,QAAAnB,MADA,CAAA4K,EAAAxD,KAAA,eAAAwD,EAAApB,OAAA,wBAEAiB,EAAAtJ,QAAAnB,SACA2K,GACAxP,OACA0P,QAAAJ,EAAArG,gBALAwG,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAQAqD,EAAAK,UAAAH,GARA,OAQA1M,EARA2M,EAAA5C,KASAyC,EAAAM,QAAAC,MAAAC,KAAA,qBAAAR,EAAAzL,MAAA,IAAArB,OAAAyL,YAAAnL,OAAAiN,mBATAN,EAAAxD,KAAA,iBAAAwD,EAAAzD,KAAA,GAAAyD,EAAAjC,GAAAiC,EAAA,YAWAhI,EAAAgG,cAAAgC,EAAAjC,GAAA8B,GAXA,yBAAAG,EAAA9B,SAAA4B,EAAAD,IAAA,cAcAlJ,cAjMA,WAkMAlI,KAAA2H,yBACA3H,KAAA6H,iBAAA,IAEA9E,gBArMA,WAsMA/C,KAAAyK,2BAEAxH,mBAxMA,SAwMAnB,EAAAN,GACAxB,KAAAyK,mBAAA3I,GAEA4B,uBA3MA,SA2MAlC,GACAxB,KAAAuD,aAAA/B,GAEA2C,iBA9MA,SA8MAb,GACAtD,KAAAgM,UAAA,iBAAA1I,EACAtD,KAAAiM,WAAA,aAAA3I,GAEAG,oBAlNA,WAmNAzD,KAAAuD,aAAA,IAEAW,cArNA,WAsNAlE,KAAAgM,iBACAhM,KAAAiM,mBAEAjH,aAzNA,SAyNAsG,GACAtL,KAAA8E,WAAAqH,QAAAb,EACAtL,KAAAqN,eAEA9I,YA7NA,WA8NAvE,KAAAuC,WAAA,OACAvC,KAAAgM,iBACAhM,KAAAiM,kBACAjM,KAAAuD,aAAA,GACAvD,KAAA2D,eACA3D,KAAA8D,gBACA9D,KAAA2B,gBACA3B,KAAAoE,WAAA,GACApE,KAAAkD,SAAA,GACAlD,KAAA4L,wBACA5L,KAAA6L,sBACA7L,KAAAqE,sBAEA/B,oBA3OA,SA2OAwP,EAAAC,GAEA/R,KAAA4L,iBAAAkG,EAAA,GACA9R,KAAA6L,eAAAiG,EAAA,IAEAE,gBAhPA,WAgPA,IAAAC,EAAAjS,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAAyE,IAAA,IAAAC,EAAA,OAAA3E,EAAA7D,QAAAiE,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAAtE,KAAA,EAAAsE,EAAArE,KAAA,EAEAkE,EAAAI,mBAFA,OAEAF,EAFAC,EAAAzD,KAGAsD,EAAA/F,qBAAAiG,EAAAvN,KAAAqK,IAAA,SAAA4B,GAAA,OAAAvN,GAAAuN,EAAArP,MAAAM,KAAA+O,EAAA/O,QACAmQ,EAAA1O,aAAA0O,EAAAlM,eAAA,GAJAqM,EAAArE,KAAA,gBAAAqE,EAAAtE,KAAA,EAAAsE,EAAA9C,GAAA8C,EAAA,YAMA7I,EAAAgG,cAAA6C,EAAA9C,GAAA2C,GANA,yBAAAG,EAAA3C,SAAAyC,EAAAD,IAAA,aASAlF,QAzPA,WAyPA,IAAAuF,EAAAtS,KAAA,SAAAuN,EAAA5D,SAAA6D,EAAA7D,QAAA8D,KAAA,SAAA8E,IAAA,OAAA/E,EAAA7D,QAAAiE,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,OACA0E,EAAA9I,QAAA+I,KACAJ,EAAAjF,cACAiF,EAAAN,kBACAM,EAAAhC,mBACAqC,MAAA,SAAAC,MACArJ,EAAAgG,cAAAqD,EAAAN,KANA,wBAAAE,EAAA/C,SAAA8C,EAAAD,KAAA,IASAxM,sBAlQA,SAkQAtE,GACA,WAAAxB,KAAAkM,qBAAA2G,OACA,GAEA7S,KAAAkM,qBAAA4G,KAAA,SAAAC,GAAA,OAAAA,EAAA,KAAAvR,IACA,MAEAJ,cAzQA,WA0QApB,KAAA6K,sBAAA7K,KAAA6K,sBAEA/J,aA5QA,WA6QAd,KAAAmH,wBAEAM,mBA/QA,WAgRAzH,KAAAmH,4BAAA;;;;;;2FChnBAnI,EAAAC,EAAAC,GAAA,IAAA8T,EAAAhU,+JAAA,KAAAiU,EAAAjU,EAAAY,EAAAoT,GAAA,QAAA3T,KAAA2T,EAAA,YAAA3T,GAAA,SAAAC,GAAAN,EAAAO,EAAAL,EAAAI,EAAA,kBAAA0T,EAAA1T,KAAA,CAAAD,GAA2MH,EAAA,QAAA+T,EAAG;;;;;;oJCsC9MjU,wBAAA,GACA,IAAAkU,EAAAlU,6BAAA,gBAGA8C,KAAA,kBACA0D,OAAA,8CACAZ,KAHA,WAIA,OACA9C,KAAA,OAAA9B,KAAAmT,SAAAC,MAAA,EAAAF,EAAAG,cAAAC,qBAAA,GACAC,cACAC,YACAC,IAAAP,EAAAG,cAAAC,qBACAI,MAAAR,EAAAS,UAEAnT,MACAD,MAAA0K,QAAA,QACAnC,SAAAmC,QAAA,WAIA2I,OACAT,SADA,SACAU,GACA7T,KAAA8B,KAAA,OAAA+R,EAAAT,MAAA,EAAAF,EAAAG,cAAAC,qBAAA,KAGApG,SACAtE,UADA,WACA,IAAA0E,EAAAtN,KACAA,KAAA8T,WAAAC,cAAAC,KAAA,SAAA9D,GACAA,IAGA5C,EAAAxL,KAAAwL,EAAAxL,KAAAmS,OACA3G,EAAA4G,MAAA,UAAA5G,EAAAxL,UAGA+G,SAVA,WAWA7I,KAAAkU,MAAA","file":"dev/dist/js/30.js","sourcesContent":["import { render, staticRenderFns } from \"./TaskCloneDialog.vue?vue&type=template&id=14f040da&scoped=true&\"\nimport script from \"./TaskCloneDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./TaskCloneDialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TaskCloneDialog.vue?vue&type=style&index=0&id=14f040da&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"14f040da\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskCloneDialog.vue?vue&type=style&index=0&id=14f040da&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskCloneDialog.vue?vue&type=style&index=0&id=14f040da&lang=scss&scoped=true&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=5a0bb192&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=5a0bb192&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"task-container\"},[_c('div',{staticClass:\"list-wrapper\"},[_c('BaseTitle',{attrs:{\"title\":_vm.i18n.task_list}}),_vm._v(\" \"),_c('div',{staticClass:\"operation-area\"},[_c('div',{staticClass:\"operation-area clearfix\"},[_c('bk-button',{staticClass:\"task-btn\",attrs:{\"theme\":\"primary\"},on:{\"click\":_vm.onCreateTask}},[_vm._v(\"\\n                    \"+_vm._s(_vm.i18n.create)+\"\\n                \")]),_vm._v(\" \"),_c('div',{staticClass:\"task-advanced-search\"},[_c('AdvanceSearch',{staticClass:\"base-search\",attrs:{\"input-placeholader\":_vm.i18n.taskNamePlaceholder},on:{\"onShow\":_vm.onAdvanceShow,\"input\":_vm.onSearchInput},model:{value:(_vm.flowName),callback:function ($$v) {_vm.flowName=$$v},expression:\"flowName\"}})],1)],1)]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isAdvancedSerachShow),expression:\"isAdvancedSerachShow\"}],staticClass:\"task-search\"},[_c('fieldset',{staticClass:\"task-fieldset\"},[_c('div',{staticClass:\"task-query-content\"},[_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.start_time))]),_vm._v(\" \"),_c('bk-date-picker',{ref:\"bkRanger\",attrs:{\"placeholder\":_vm.i18n.dateRange,\"type\":'daterange'},on:{\"change\":_vm.onChangeExecuteTime},model:{value:(_vm.TimeRange),callback:function ($$v) {_vm.TimeRange=$$v},expression:\"TimeRange\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.task_type))]),_vm._v(\" \"),_c('bk-select',{staticClass:\"bk-select-inline\",attrs:{\"popover-width\":260,\"searchable\":true,\"is-loading\":_vm.taskBasicInfoLoading,\"placeholder\":_vm.i18n.taskTypePlaceholder},on:{\"clear\":_vm.onClearCategory,\"selected\":_vm.onSelectedCategory},model:{value:(_vm.taskSync),callback:function ($$v) {_vm.taskSync=$$v},expression:\"taskSync\"}},_vm._l((_vm.taskCategory),function(option,index){return _c('bk-option',{key:index,attrs:{\"id\":option.id,\"name\":option.name}})}),1)],1),_vm._v(\" \"),_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.createMethod))]),_vm._v(\" \"),_c('bk-select',{staticClass:\"bk-select-inline\",attrs:{\"popover-width\":260,\"searchable\":true,\"is-loading\":_vm.taskBasicInfoLoading,\"placeholder\":_vm.i18n.createMethodPlaceholder},on:{\"clear\":_vm.onClearCreateMethod,\"selected\":_vm.onSelectedCreateMethod},model:{value:(_vm.createMethod),callback:function ($$v) {_vm.createMethod=$$v},expression:\"createMethod\"}},_vm._l((_vm.taskCreateMethodList),function(option,index){return _c('bk-option',{key:index,attrs:{\"id\":option.id,\"name\":option.name}})}),1)],1),_vm._v(\" \"),_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.creator))]),_vm._v(\" \"),_c('bk-input',{staticClass:\"bk-input-inline\",attrs:{\"clearable\":true,\"placeholder\":_vm.i18n.creatorPlaceholder},model:{value:(_vm.creator),callback:function ($$v) {_vm.creator=$$v},expression:\"creator\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.executor))]),_vm._v(\" \"),_c('bk-input',{staticClass:\"bk-input-inline\",attrs:{\"clearable\":true,\"placeholder\":_vm.i18n.executorPlaceholder},model:{value:(_vm.executor),callback:function ($$v) {_vm.executor=$$v},expression:\"executor\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"query-content\"},[_c('span',{staticClass:\"query-span\"},[_vm._v(_vm._s(_vm.i18n.status))]),_vm._v(\" \"),_c('bk-select',{staticClass:\"bk-select-inline\",attrs:{\"popover-width\":260,\"searchable\":true,\"is-loading\":_vm.taskBasicInfoLoading,\"placeholder\":_vm.i18n.statusPlaceholder},on:{\"clear\":_vm.onClearStatus,\"selected\":_vm.onSelectedStatus},model:{value:(_vm.statusSync),callback:function ($$v) {_vm.statusSync=$$v},expression:\"statusSync\"}},_vm._l((_vm.statusList),function(option,index){return _c('bk-option',{key:index,attrs:{\"id\":option.id,\"name\":option.name}})}),1)],1),_vm._v(\" \"),_c('div',{staticClass:\"query-button\"},[_c('bk-button',{staticClass:\"query-primary\",attrs:{\"theme\":\"primary\"},on:{\"click\":_vm.searchInputhandler}},[_vm._v(_vm._s(_vm.i18n.query))]),_vm._v(\" \"),_c('bk-button',{staticClass:\"query-cancel\",on:{\"click\":_vm.onResetForm}},[_vm._v(_vm._s(_vm.i18n.reset))])],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"task-table-content\"},[_c('bk-table',{directives:[{name:\"bkloading\",rawName:\"v-bkloading\",value:({ isLoading: _vm.listLoading, opacity: 1 }),expression:\"{ isLoading: listLoading, opacity: 1 }\"}],attrs:{\"data\":_vm.taskList,\"pagination\":_vm.pagination},on:{\"page-change\":_vm.onPageChange}},[_c('bk-table-column',{attrs:{\"label\":\"ID\",\"prop\":\"id\",\"width\":\"80\"}}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.task_name,\"prop\":\"name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('router-link',{staticClass:\"task-name\",attrs:{\"title\":props.row.name,\"to\":(\"/taskflow/execute/\" + _vm.cc_id + \"/?instance_id=\" + (props.row.id))}},[_vm._v(\"\\n                            \"+_vm._s(props.row.name)+\"\\n                        \")])]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.start_time,\"prop\":\"category_name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_vm._v(\"\\n                        \"+_vm._s(props.row.start_time || '--')+\"\\n                    \")]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.finish_time},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_vm._v(\"\\n                        \"+_vm._s(props.row.finish_time || '--')+\"\\n                    \")]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.task_type,\"prop\":\"category_name\"}}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.creator,\"prop\":\"creator_name\",\"width\":\"120\"}}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.executor,\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_vm._v(\"\\n                        \"+_vm._s(props.row.executor_name || '--')+\"\\n                    \")]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.createMethod,\"width\":\"80\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_vm._v(\"\\n                        \"+_vm._s(_vm.transformCreateMethod(props.row.create_method))+\"\\n                    \")]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.status,\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"task-status\"},[_c('span',{class:_vm.executeStatus[props.$index] && _vm.executeStatus[props.$index].cls}),_vm._v(\" \"),(_vm.executeStatus[props.$index])?_c('span',{staticClass:\"task-status-text\"},[_vm._v(_vm._s(_vm.executeStatus[props.$index].text))]):_vm._e()])]}}])}),_vm._v(\" \"),_c('bk-table-column',{attrs:{\"label\":_vm.i18n.operation,\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"task-operation\"},[_c('a',{staticClass:\"task-operation-clone\",attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){$event.preventDefault();return _vm.onCloneTaskClick(props.row.id, props.row.name)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.i18n.clone)+\"\\n                            \")]),_vm._v(\" \"),_c('a',{staticClass:\"task-operation-delete\",attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){$event.preventDefault();return _vm.onDeleteTask(props.row.id, props.row.name)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.i18n.delete)+\"\\n                            \")])])]}}])}),_vm._v(\" \"),_c('div',{staticClass:\"empty-data\",attrs:{\"slot\":\"empty\"},slot:\"empty\"},[_c('NoData',{attrs:{\"message\":_vm.i18n.empty}})],1)],1)],1)],1),_vm._v(\" \"),_c('CopyrightFooter'),_vm._v(\" \"),_c('TaskCreateDialog',{attrs:{\"common\":_vm.common,\"cc_id\":_vm.cc_id,\"is-new-task-dialog-show\":_vm.isNewTaskDialogShow,\"business-info-loading\":_vm.businessInfoLoading,\"create-entrance\":true,\"task-category\":_vm.taskCategory},on:{\"onCreateTaskCancel\":_vm.onCreateTaskCancel}}),_vm._v(\" \"),_c('TaskCloneDialog',{attrs:{\"is-task-clone-dialog-show\":_vm.isTaskCloneDialogShow,\"task-name\":_vm.theCloneTaskName,\"pending\":_vm.pending.clone},on:{\"confirm\":_vm.onCloneConfirm,\"cancel\":_vm.onCloneCancel}}),_vm._v(\" \"),_c('bk-dialog',{attrs:{\"width\":\"400\",\"ext-cls\":\"common-dialog\",\"theme\":'primary',\"mask-close\":false,\"header-position\":'left',\"title\":_vm.i18n.delete,\"value\":_vm.isDeleteDialogShow},on:{\"confirm\":_vm.onDeleteConfirm,\"cancel\":_vm.onDeleteCancel}},[_c('div',{directives:[{name:\"bkloading\",rawName:\"v-bkloading\",value:({ isLoading: _vm.pending.delete, opacity: 1 }),expression:\"{ isLoading: pending.delete, opacity: 1 }\"}],staticClass:\"dialog-content\"},[_vm._v(\"\\n            \"+_vm._s(_vm.i18n.deleleTip + '\"' + _vm.theDeleteTaskName + '\"?')+\"\\n        \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=5a0bb192&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('bk-dialog',{attrs:{\"width\":\"600\",\"ext-cls\":\"common-dialog\",\"theme\":'primary',\"mask-close\":false,\"header-position\":'left',\"title\":_vm.i18n.title,\"value\":_vm.isTaskCloneDialogShow},on:{\"confirm\":_vm.onConfirm,\"cancel\":_vm.onCancel}},[_c('div',{directives:[{name:\"bkloading\",rawName:\"v-bkloading\",value:({ isLoading: _vm.pending, opacity: 1 }),expression:\"{ isLoading: pending, opacity: 1 }\"}],staticClass:\"clone-wrapper\"},[_c('div',{staticClass:\"common-form-item\"},[_c('label',[_vm._v(_vm._s(_vm.i18n.template))]),_vm._v(\" \"),_c('div',{staticClass:\"common-form-content\"},[_c('bk-input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.taskNameRule),expression:\"taskNameRule\"}],attrs:{\"name\":\"taskName\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_vm._v(\" \"),(_vm.errors.has('taskName'))?_c('span',{staticClass:\"common-error-tip error-msg\"},[_vm._v(_vm._s(_vm.errors.first('taskName')))]):_vm._e()],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskCloneDialog.vue?vue&type=template&id=14f040da&scoped=true&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5a0bb192&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=5a0bb192&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5a0bb192\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","/**\r\n* Tencent is pleased to support the open source community by making 蓝鲸智云PaaS平台社区版 (BlueKing PaaS Community\r\n* Edition) available.\r\n* Copyright (C) 2017-2019 THL A29 Limited, a Tencent company. All rights reserved.\r\n* Licensed under the MIT License (the \"License\"); you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n* http://opensource.org/licenses/MIT\r\n* Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\r\n* an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\r\n* specific language governing permissions and limitations under the License.\r\n*/\r\n<template>\r\n    <div class=\"task-container\">\r\n        <div class=\"list-wrapper\">\r\n            <BaseTitle :title=\"i18n.task_list\"></BaseTitle>\r\n            <div class=\"operation-area\">\r\n                <div class=\"operation-area clearfix\">\r\n                    <bk-button\r\n                        theme=\"primary\"\r\n                        class=\"task-btn\"\r\n                        @click=\"onCreateTask\">\r\n                        {{i18n.create}}\r\n                    </bk-button>\r\n                    <div class=\"task-advanced-search\">\r\n                        <AdvanceSearch\r\n                            class=\"base-search\"\r\n                            v-model=\"flowName\"\r\n                            :input-placeholader=\"i18n.taskNamePlaceholder\"\r\n                            @onShow=\"onAdvanceShow\"\r\n                            @input=\"onSearchInput\">\r\n                        </AdvanceSearch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"task-search\" v-show=\"isAdvancedSerachShow\">\r\n                <fieldset class=\"task-fieldset\">\r\n                    <div class=\"task-query-content\">\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.start_time}}</span>\r\n                            <bk-date-picker\r\n                                ref=\"bkRanger\"\r\n                                v-model=\"TimeRange\"\r\n                                :placeholder=\"i18n.dateRange\"\r\n                                :type=\"'daterange'\"\r\n                                @change=\"onChangeExecuteTime\">\r\n                            </bk-date-picker>\r\n                        </div>\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.task_type}}</span>\r\n                            <bk-select\r\n                                v-model=\"taskSync\"\r\n                                class=\"bk-select-inline\"\r\n                                :popover-width=\"260\"\r\n                                :searchable=\"true\"\r\n                                :is-loading=\"taskBasicInfoLoading\"\r\n                                :placeholder=\"i18n.taskTypePlaceholder\"\r\n                                @clear=\"onClearCategory\"\r\n                                @selected=\"onSelectedCategory\">\r\n                                <bk-option\r\n                                    v-for=\"(option, index) in taskCategory\"\r\n                                    :key=\"index\"\r\n                                    :id=\"option.id\"\r\n                                    :name=\"option.name\">\r\n                                </bk-option>\r\n                            </bk-select>\r\n                        </div>\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.createMethod}}</span>\r\n                            <bk-select\r\n                                v-model=\"createMethod\"\r\n                                class=\"bk-select-inline\"\r\n                                :popover-width=\"260\"\r\n                                :searchable=\"true\"\r\n                                :is-loading=\"taskBasicInfoLoading\"\r\n                                :placeholder=\"i18n.createMethodPlaceholder\"\r\n                                @clear=\"onClearCreateMethod\"\r\n                                @selected=\"onSelectedCreateMethod\">\r\n                                <bk-option\r\n                                    v-for=\"(option, index) in taskCreateMethodList\"\r\n                                    :key=\"index\"\r\n                                    :id=\"option.id\"\r\n                                    :name=\"option.name\">\r\n                                </bk-option>\r\n                            </bk-select>\r\n                        </div>\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.creator}}</span>\r\n                            <bk-input\r\n                                v-model=\"creator\"\r\n                                class=\"bk-input-inline\"\r\n                                :clearable=\"true\"\r\n                                :placeholder=\"i18n.creatorPlaceholder\">\r\n                            </bk-input>\r\n                        </div>\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.executor}}</span>\r\n                            <bk-input\r\n                                v-model=\"executor\"\r\n                                class=\"bk-input-inline\"\r\n                                :clearable=\"true\"\r\n                                :placeholder=\"i18n.executorPlaceholder\">\r\n                            </bk-input>\r\n                        </div>\r\n                        <div class=\"query-content\">\r\n                            <span class=\"query-span\">{{i18n.status}}</span>\r\n                            <bk-select\r\n                                v-model=\"statusSync\"\r\n                                class=\"bk-select-inline\"\r\n                                :popover-width=\"260\"\r\n                                :searchable=\"true\"\r\n                                :is-loading=\"taskBasicInfoLoading\"\r\n                                :placeholder=\"i18n.statusPlaceholder\"\r\n                                @clear=\"onClearStatus\"\r\n                                @selected=\"onSelectedStatus\">\r\n                                <bk-option\r\n                                    v-for=\"(option, index) in statusList\"\r\n                                    :key=\"index\"\r\n                                    :id=\"option.id\"\r\n                                    :name=\"option.name\">\r\n                                </bk-option>\r\n                            </bk-select>\r\n                        </div>\r\n                        <div class=\"query-button\">\r\n                            <bk-button class=\"query-primary\" theme=\"primary\" @click=\"searchInputhandler\">{{i18n.query}}</bk-button>\r\n                            <bk-button class=\"query-cancel\" @click=\"onResetForm\">{{i18n.reset}}</bk-button>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n            <div class=\"task-table-content\">\r\n                <bk-table\r\n                    :data=\"taskList\"\r\n                    :pagination=\"pagination\"\r\n                    @page-change=\"onPageChange\"\r\n                    v-bkloading=\"{ isLoading: listLoading, opacity: 1 }\">\r\n                    <bk-table-column label=\"ID\" prop=\"id\" width=\"80\"></bk-table-column>\r\n                    <bk-table-column :label=\"i18n.task_name\" prop=\"name\">\r\n                        <template slot-scope=\"props\">\r\n                            <router-link\r\n                                class=\"task-name\"\r\n                                :title=\"props.row.name\"\r\n                                :to=\"`/taskflow/execute/${cc_id}/?instance_id=${props.row.id}`\">\r\n                                {{ props.row.name }}\r\n                            </router-link>\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.start_time\" prop=\"category_name\">\r\n                        <template slot-scope=\"props\">\r\n                            {{ props.row.start_time || '--' }}\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.finish_time\">\r\n                        <template slot-scope=\"props\">\r\n                            {{ props.row.finish_time || '--' }}\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.task_type\" prop=\"category_name\"></bk-table-column>\r\n                    <bk-table-column :label=\"i18n.creator\" prop=\"creator_name\" width=\"120\"></bk-table-column>\r\n                    <bk-table-column :label=\"i18n.executor\" width=\"100\">\r\n                        <template slot-scope=\"props\">\r\n                            {{ props.row.executor_name || '--' }}\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.createMethod\" width=\"80\">\r\n                        <template slot-scope=\"props\">\r\n                            {{ transformCreateMethod(props.row.create_method) }}\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.status\" width=\"120\">\r\n                        <template slot-scope=\"props\">\r\n                            <div class=\"task-status\">\r\n                                <span :class=\"executeStatus[props.$index] && executeStatus[props.$index].cls\"></span>\r\n                                <span v-if=\"executeStatus[props.$index]\" class=\"task-status-text\">{{executeStatus[props.$index].text}}</span>\r\n                            </div>\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <bk-table-column :label=\"i18n.operation\" width=\"120\">\r\n                        <template slot-scope=\"props\">\r\n                            <div class=\"task-operation\">\r\n                                <a\r\n                                    class=\"task-operation-clone\"\r\n                                    href=\"javascript:void(0);\"\r\n                                    @click.prevent=\"onCloneTaskClick(props.row.id, props.row.name)\">\r\n                                    {{ i18n.clone }}\r\n                                </a>\r\n                                <a\r\n                                    class=\"task-operation-delete\"\r\n                                    href=\"javascript:void(0);\"\r\n                                    @click.prevent=\"onDeleteTask(props.row.id, props.row.name)\">\r\n                                    {{ i18n.delete }}\r\n                                </a>\r\n                            </div>\r\n                        </template>\r\n                    </bk-table-column>\r\n                    <div class=\"empty-data\" slot=\"empty\"><NoData :message=\"i18n.empty\" /></div>\r\n                </bk-table>\r\n            </div>\r\n        </div>\r\n        <CopyrightFooter></CopyrightFooter>\r\n        <TaskCreateDialog\r\n            :common=\"common\"\r\n            :cc_id=\"cc_id\"\r\n            :is-new-task-dialog-show=\"isNewTaskDialogShow\"\r\n            :business-info-loading=\"businessInfoLoading\"\r\n            :create-entrance=\"true\"\r\n            :task-category=\"taskCategory\"\r\n            @onCreateTaskCancel=\"onCreateTaskCancel\">\r\n        </TaskCreateDialog>\r\n        <TaskCloneDialog\r\n            :is-task-clone-dialog-show=\"isTaskCloneDialogShow\"\r\n            :task-name=\"theCloneTaskName\"\r\n            :pending=\"pending.clone\"\r\n            @confirm=\"onCloneConfirm\"\r\n            @cancel=\"onCloneCancel\">\r\n        </TaskCloneDialog>\r\n        <bk-dialog\r\n            width=\"400\"\r\n            ext-cls=\"common-dialog\"\r\n            :theme=\"'primary'\"\r\n            :mask-close=\"false\"\r\n            :header-position=\"'left'\"\r\n            :title=\"i18n.delete\"\r\n            :value=\"isDeleteDialogShow\"\r\n            @confirm=\"onDeleteConfirm\"\r\n            @cancel=\"onDeleteCancel\">\r\n            <div class=\"dialog-content\" v-bkloading=\"{ isLoading: pending.delete, opacity: 1 }\">\r\n                {{i18n.deleleTip + '\"' + theDeleteTaskName + '\"?'}}\r\n            </div>\r\n        </bk-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import '@/utils/i18n.js'\r\n    import { mapState, mapMutations, mapActions } from 'vuex'\r\n    import { errorHandler } from '@/utils/errorHandler.js'\r\n    import toolsUtils from '@/utils/tools.js'\r\n    import CopyrightFooter from '@/components/layout/CopyrightFooter.vue'\r\n    import BaseTitle from '@/components/common/base/BaseTitle.vue'\r\n    import AdvanceSearch from '@/components/common/base/AdvanceSearch.vue'\r\n    import TaskCreateDialog from './TaskCreateDialog.vue'\r\n    import NoData from '@/components/common/base/NoData.vue'\r\n    import moment from 'moment-timezone'\r\n    import TaskCloneDialog from './TaskCloneDialog.vue'\r\n    export default {\r\n        name: 'TaskList',\r\n        components: {\r\n            CopyrightFooter,\r\n            BaseTitle,\r\n            AdvanceSearch,\r\n            NoData,\r\n            TaskCreateDialog,\r\n            TaskCloneDialog\r\n        },\r\n        props: ['cc_id', 'common', 'create_method'],\r\n        data () {\r\n            return {\r\n                listLoading: true,\r\n                templateId: this.$route.query.template_id,\r\n                taskCategory: [],\r\n                activeTaskCategory: undefined, // 任务类型筛选\r\n                searchStr: '',\r\n                executeStatus: [], // 任务执行状态\r\n                TimeRange: ['', ''],\r\n                totalPage: 1,\r\n                isDeleteDialogShow: false,\r\n                shapeShow: false,\r\n                isAdvancedSerachShow: false,\r\n                theDeleteTaskId: undefined,\r\n                theDeleteTaskName: '',\r\n                isTaskCloneDialogShow: false,\r\n                isNewTaskDialogShow: false,\r\n                businessInfoLoading: true, // 模板分类信息 loading\r\n                theCloneTaskName: '',\r\n                theCloneTaskId: undefined,\r\n                pending: {\r\n                    delete: false,\r\n                    clone: false\r\n                },\r\n                i18n: {\r\n                    allCategory: gettext('全部'),\r\n                    placeholder: gettext('请输入ID或任务名称'),\r\n                    task_list: gettext('任务记录'),\r\n                    task_name: gettext('任务名称'),\r\n                    start_time: gettext('执行开始'),\r\n                    finish_time: gettext('执行结束'),\r\n                    task_type: gettext('任务分类'),\r\n                    creator: gettext('创建人'),\r\n                    executor: gettext('执行人'),\r\n                    status: gettext('状态'),\r\n                    operation: gettext('操作'),\r\n                    clone: gettext('克隆'),\r\n                    delete: gettext('删除'),\r\n                    deleleTip: gettext('确认删除'),\r\n                    total: gettext('共'),\r\n                    item: gettext('条记录'),\r\n                    comma: gettext('，'),\r\n                    currentPageTip: gettext('当前第'),\r\n                    page: gettext('页'),\r\n                    taskNamePlaceholder: gettext('请输入任务名称'),\r\n                    taskTypePlaceholder: gettext('请选择分类'),\r\n                    creatorPlaceholder: gettext('请输入创建人'),\r\n                    executorPlaceholder: gettext('请输入执行人'),\r\n                    statusPlaceholder: gettext('请选择状态'),\r\n                    query: gettext('搜索'),\r\n                    reset: gettext('清空'),\r\n                    createMethod: gettext('创建方式'),\r\n                    createMethodApp: gettext('应用内'),\r\n                    createMethodAppmaker: gettext('轻应用'),\r\n                    createMethodPlaceholder: gettext('请选择创建方式'),\r\n                    advanceSearch: gettext('高级搜索'),\r\n                    executing: gettext('执行中'),\r\n                    pauseState: gettext('暂停'),\r\n                    create: gettext('新建'),\r\n                    dateRange: gettext('选择日期时间范围')\r\n                },\r\n                executeStartTime: undefined,\r\n                executeEndTime: undefined,\r\n                flowName: undefined,\r\n                category: undefined,\r\n                creator: undefined,\r\n                executor: undefined,\r\n                taskSync: '',\r\n                statusList: [\r\n                    { 'id': 'nonExecution', 'name': gettext('未执行') },\r\n                    { 'id': 'runing', 'name': gettext('未完成') },\r\n                    { 'id': 'finished', 'name': gettext('完成') }\r\n                ],\r\n                taskBasicInfoLoading: true,\r\n                isStarted: undefined,\r\n                isFinished: undefined,\r\n                statusSync: '',\r\n                taskCreateMethodList: [],\r\n                createMethod: this.create_method || '',\r\n                pagination: {\r\n                    current: 1,\r\n                    count: 0,\r\n                    limit: 15,\r\n                    'limit-list': [15],\r\n                    'show-limit': false\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState({\r\n                taskList: state => state.taskList.taskListData,\r\n                businessTimezone: state => state.businessTimezone\r\n            })\r\n        },\r\n        created () {\r\n            this.getData()\r\n            this.onSearchInput = toolsUtils.debounce(this.searchInputhandler, 500)\r\n        },\r\n        methods: {\r\n            ...mapActions('template/', [\r\n                'loadBusinessBaseInfo'\r\n            ]),\r\n            ...mapActions('task/', [\r\n                'getInstanceStatus',\r\n                'loadCreateMethod'\r\n            ]),\r\n            ...mapActions('taskList/', [\r\n                'loadTaskList',\r\n                'deleteTask',\r\n                'cloneTask'\r\n            ]),\r\n            ...mapMutations('template/', [\r\n                'setBusinessBaseInfo'\r\n            ]),\r\n            ...mapMutations('taskList/', [\r\n                'setTaskListData'\r\n            ]),\r\n            async getTaskList () {\r\n                // 空字符串需要转换为undefined，undefined数据在axios请求发送过程中会被删除\r\n                if (this.executeStartTime === '') {\r\n                    this.executeStartTime = undefined\r\n                }\r\n                this.listLoading = true\r\n                this.executeStatus = []\r\n                try {\r\n                    const data = {\r\n                        limit: this.pagination.limit,\r\n                        offset: (this.pagination.current - 1) * this.pagination.limit,\r\n                        category: this.activeTaskCategory,\r\n                        template_id: this.templateId,\r\n                        common: this.common,\r\n                        pipeline_instance__creator__contains: this.creator,\r\n                        pipeline_instance__executor__contains: this.executor,\r\n                        pipeline_instance__name__contains: this.flowName,\r\n                        pipeline_instance__is_started: this.isStarted,\r\n                        pipeline_instance__is_finished: this.isFinished,\r\n                        create_method: this.createMethod || undefined\r\n                    }\r\n                    if (this.executeEndTime) {\r\n                        if (this.common) {\r\n                            data['pipeline_template__start_time__gte'] = moment(this.executeStartTime).format('YYYY-MM-DD')\r\n                            data['pipeline_template__start_time__lte'] = moment(this.executeEndTime).add('1', 'd').format('YYYY-MM-DD')\r\n                        } else {\r\n                            data['pipeline_instance__start_time__gte'] = moment.tz(this.executeStartTime, this.businessTimezone).format('YYYY-MM-DD')\r\n                            data['pipeline_instance__start_time__lte'] = moment.tz(this.executeEndTime, this.businessTimezone).add('1', 'd').format('YYYY-MM-DD')\r\n                        }\r\n                    }\r\n                    const taskListData = await this.loadTaskList(data)\r\n                    const list = taskListData.objects\r\n                    this.pagination.count = taskListData.meta.total_count\r\n                    const totalPage = Math.ceil(this.pagination.count / this.pagination.limit)\r\n                    if (!totalPage) {\r\n                        this.totalPage = 1\r\n                    } else {\r\n                        this.totalPage = totalPage\r\n                    }\r\n                    this.executeStatus = list.map((item, index) => {\r\n                        const status = {}\r\n                        if (item.is_finished) {\r\n                            status.cls = 'finished bk-icon icon-check-circle-shape'\r\n                            status.text = gettext('完成')\r\n                        } else if (item.is_started) {\r\n                            status.cls = 'loading common-icon-loading'\r\n                            this.getExecuteDetail(item, index)\r\n                        } else {\r\n                            status.cls = 'created common-icon-dark-circle-shape'\r\n                            status.text = gettext('未执行')\r\n                        }\r\n                        return status\r\n                    })\r\n                    this.setTaskListData(list)\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                } finally {\r\n                    this.listLoading = false\r\n                }\r\n            },\r\n            async getExecuteDetail (task, index) {\r\n                const data = {\r\n                    instance_id: task.id,\r\n                    cc_id: task.business.cc_id\r\n                }\r\n                try {\r\n                    const detailInfo = await this.getInstanceStatus(data)\r\n                    if (detailInfo.result) {\r\n                        const state = detailInfo.data.state\r\n                        const status = {}\r\n                        switch (state) {\r\n                            case 'RUNNING':\r\n                            case 'BLOCKED':\r\n                                status.cls = 'running common-icon-dark-circle-ellipsis'\r\n                                status.text = gettext('执行中')\r\n                                break\r\n                            case 'SUSPENDED':\r\n                                status.cls = 'execute common-icon-dark-circle-pause'\r\n                                status.text = gettext('暂停')\r\n                                break\r\n                            case 'NODE_SUSPENDED':\r\n                                status.cls = 'execute common-icon-dark-circle-pause'\r\n                                status.text = gettext('节点暂停')\r\n                                break\r\n                            case 'FAILED':\r\n                                status.cls = 'failed common-icon-dark-circle-close'\r\n                                status.text = gettext('失败')\r\n                                break\r\n                            case 'REVOKED':\r\n                                status.cls = 'revoke common-icon-dark-circle-shape'\r\n                                status.text = gettext('撤销')\r\n                                break\r\n                            default:\r\n                                status.text = gettext('未知')\r\n                        }\r\n                        this.executeStatus.splice(index, 1, status)\r\n                    } else {\r\n                        errorHandler(detailInfo, this)\r\n                    }\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                }\r\n            },\r\n            async getBizBaseInfo () {\r\n                try {\r\n                    const bizBasicInfo = await this.loadBusinessBaseInfo()\r\n                    this.taskCategory = bizBasicInfo.task_categories.map(m => ({ id: m.value, name: m.name }))\r\n                    this.setBusinessBaseInfo(bizBasicInfo)\r\n                    this.taskBasicInfoLoading = false\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                }\r\n            },\r\n            onCategoryClick (category) {\r\n                this.activeTaskCategory = category\r\n                this.pagination.current = 1\r\n                this.getTaskList()\r\n            },\r\n            searchInputhandler () {\r\n                this.pagination.current = 1\r\n                this.getTaskList()\r\n            },\r\n            onDeleteTask (id, name) {\r\n                this.theDeleteTaskId = id\r\n                this.theDeleteTaskName = name\r\n                this.isDeleteDialogShow = true\r\n            },\r\n            async onDeleteConfirm () {\r\n                if (this.pending.delete) return\r\n                this.pending.delete = true\r\n                try {\r\n                    await this.deleteTask(this.theDeleteTaskId)\r\n                    this.theDeleteTaskId = undefined\r\n                    this.theDeleteTaskName = ''\r\n                    // 最后一页最后一条删除后，往前翻一页\r\n                    if (\r\n                        this.pagination.current > 1\r\n                        && this.totalPage === this.pagination.current\r\n                        && this.pagination.count - (this.totalPage - 1) * this.pagination.limit === 1\r\n                    ) {\r\n                        this.pagination.current -= 1\r\n                    }\r\n                    await this.getTaskList()\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                } finally {\r\n                    this.isDeleteDialogShow = false\r\n                    this.pending.delete = false\r\n                }\r\n            },\r\n            onDeleteCancel () {\r\n                this.theDeleteTaskId = undefined\r\n                this.theDeleteTaskName = ''\r\n                this.isDeleteDialogShow = false\r\n            },\r\n            onCloneTaskClick (id, name) {\r\n                this.isTaskCloneDialogShow = true\r\n                this.theCloneTaskId = id\r\n                this.theCloneTaskName = name\r\n            },\r\n            async onCloneConfirm (name) {\r\n                if (this.pending.clone) return\r\n                this.pending.clone = true\r\n                const config = {\r\n                    name,\r\n                    task_id: this.theCloneTaskId\r\n                }\r\n                try {\r\n                    const data = await this.cloneTask(config)\r\n                    this.$router.push({ path: `/taskflow/execute/${this.cc_id}/`, query: { instance_id: data.data.new_instance_id } })\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                }\r\n            },\r\n            onCloneCancel () {\r\n                this.isTaskCloneDialogShow = false\r\n                this.theCloneTaskName = ''\r\n            },\r\n            onClearCategory () {\r\n                this.activeTaskCategory = undefined\r\n            },\r\n            onSelectedCategory (name, value) {\r\n                this.activeTaskCategory = name\r\n            },\r\n            onSelectedCreateMethod (value) {\r\n                this.createMethod = value\r\n            },\r\n            onSelectedStatus (id) {\r\n                this.isStarted = id !== 'nonExecution'\r\n                this.isFinished = id === 'finished'\r\n            },\r\n            onClearCreateMethod () {\r\n                this.createMethod = ''\r\n            },\r\n            onClearStatus () {\r\n                this.isStarted = undefined\r\n                this.isFinished = undefined\r\n            },\r\n            onPageChange (page) {\r\n                this.pagination.current = page\r\n                this.getTaskList()\r\n            },\r\n            onResetForm () {\r\n                this.TimeRange = ['', '']\r\n                this.isStarted = undefined\r\n                this.isFinished = undefined\r\n                this.createMethod = ''\r\n                this.creator = undefined\r\n                this.executor = undefined\r\n                this.flowName = undefined\r\n                this.statusSync = ''\r\n                this.taskSync = ''\r\n                this.executeStartTime = undefined\r\n                this.executeEndTime = undefined\r\n                this.searchInputhandler()\r\n            },\r\n            onChangeExecuteTime (oldValue, newValue) {\r\n                // const timeArray = oldValue.split(' - ')\r\n                this.executeStartTime = oldValue[0]\r\n                this.executeEndTime = oldValue[1]\r\n            },\r\n            async getCreateMethod () {\r\n                try {\r\n                    const createMethodData = await this.loadCreateMethod()\r\n                    this.taskCreateMethodList = createMethodData.data.map(m => ({ id: m.value, name: m.name }))\r\n                    this.createMethod = this.create_method || ''\r\n                } catch (e) {\r\n                    errorHandler(e, this)\r\n                }\r\n            },\r\n            async getData () {\r\n                Promise.all([\r\n                    this.getTaskList(),\r\n                    this.getCreateMethod(),\r\n                    this.getBizBaseInfo()\r\n                ]).catch(e => {\r\n                    errorHandler(e, this)\r\n                })\r\n            },\r\n            transformCreateMethod (value) {\r\n                if (this.taskCreateMethodList.length === 0) {\r\n                    return ''\r\n                }\r\n                const taskCreateMethod = this.taskCreateMethodList.find((taskCreateMethod) => taskCreateMethod['id'] === value)\r\n                return taskCreateMethod['name']\r\n            },\r\n            onAdvanceShow () {\r\n                this.isAdvancedSerachShow = !this.isAdvancedSerachShow\r\n            },\r\n            onCreateTask () {\r\n                this.isNewTaskDialogShow = true\r\n            },\r\n            onCreateTaskCancel () {\r\n                this.isNewTaskDialogShow = false\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang='scss' scoped>\r\n@import '@/scss/config.scss';\r\n@import '@/scss/mixins/advancedSearch.scss';\r\n@include advancedSearch;\r\n.dialog-content {\r\n    padding: 30px;\r\n    word-break: break-all;\r\n}\r\n.list-wrapper {\r\n    padding: 0 60px;\r\n    min-height: calc(100vh - 240px);\r\n    .advanced-search {\r\n        margin: 20px 0px;\r\n    }\r\n}\r\n.operation-area {\r\n    margin: 20px 0;\r\n    .template-btn {\r\n        margin-left: 5px;\r\n        color: #313238;\r\n    }\r\n    .task-advanced-search {\r\n        float: right;\r\n        .base-search {\r\n            margin: 0px;\r\n        }\r\n    }\r\n}\r\n.bk-select-inline {\r\n    width: 260px;\r\n    display: inline-block;\r\n}\r\n.bk-input-inline {\r\n    display: inline-block;\r\n    width: 260px;\r\n}\r\n.common-icon-dark-circle-pause {\r\n    color: #ff9c01;\r\n    font-size: 14px;\r\n}\r\n.operation-area {\r\n    .bk-button {\r\n        min-width: 120px;\r\n    }\r\n}\r\n.task-table-content {\r\n    background: #ffffff;\r\n    a.task-name {\r\n        color: $blueDefault;\r\n    }\r\n    .task-status {\r\n        width: 105px;\r\n        text-align: left;\r\n        .common-icon-dark-circle-shape {\r\n            display: inline-block;\r\n            font-size: 14px;\r\n            color: #979BA5;\r\n            vertical-align: middle;\r\n        }\r\n        .common-icon-dark-circle-ellipsis {\r\n            color: #3c96ff;\r\n            font-size: 14px;\r\n            vertical-align: middle;\r\n        }\r\n        .icon-check-circle-shape {\r\n            font-size: 14px;\r\n            color: $greenDefault;\r\n            vertical-align: middle;\r\n        }\r\n        .common-icon-dark-circle-close {\r\n            color: $redDefault;\r\n            font-size: 16px;\r\n            vertical-align: middle;\r\n        }\r\n        &.revoke {\r\n            color: $blueDisable;\r\n        }\r\n        .common-icon-loading {\r\n            display: inline-block;\r\n            animation: bk-button-loading 1.4s infinite linear;\r\n        }\r\n        @keyframes bk-button-loading {\r\n            from {\r\n                -webkit-transform: rotate(0);\r\n                transform: rotate(0); }\r\n            to {\r\n                -webkit-transform: rotate(360deg);\r\n                transform: rotate(360deg);\r\n            }\r\n        }\r\n        .task-status-text {\r\n            display: inline-block;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n    .task-operation {\r\n        width: 150px;\r\n        .task-operation-clone {\r\n            color: #3C96FF;\r\n            font-size: 12px;\r\n        }\r\n        .task-operation-delete {\r\n            padding: 5px;\r\n            color: #3C96FF;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n    .empty-data {\r\n        padding: 120px 0;\r\n    }\r\n}\r\n.panagation {\r\n    padding: 10px 20px;\r\n    text-align: right;\r\n    border: 1px solid #dde4eb;\r\n    border-top: none;\r\n    background: #ffff;\r\n    .page-info {\r\n        float: left;\r\n        line-height: 36px;\r\n        font-size: 12px;\r\n    }\r\n    .bk-page {\r\n        display: inline-block;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskCloneDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskCloneDialog.vue?vue&type=script&lang=js&\"","/**\r\n* Tencent is pleased to support the open source community by making 蓝鲸智云PaaS平台社区版 (BlueKing PaaS Community\r\n* Edition) available.\r\n* Copyright (C) 2017-2019 THL A29 Limited, a Tencent company. All rights reserved.\r\n* Licensed under the MIT License (the \"License\"); you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n* http://opensource.org/licenses/MIT\r\n* Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\r\n* an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\r\n* specific language governing permissions and limitations under the License.\r\n*/\r\n<template>\r\n    <bk-dialog\r\n        width=\"600\"\r\n        ext-cls=\"common-dialog\"\r\n        :theme=\"'primary'\"\r\n        :mask-close=\"false\"\r\n        :header-position=\"'left'\"\r\n        :title=\"i18n.title\"\r\n        :value=\"isTaskCloneDialogShow\"\r\n        @confirm=\"onConfirm\"\r\n        @cancel=\"onCancel\">\r\n        <div class=\"clone-wrapper\" v-bkloading=\"{ isLoading: pending, opacity: 1 }\">\r\n            <div class=\"common-form-item\">\r\n                <label>{{ i18n.template }}</label>\r\n                <div class=\"common-form-content\">\r\n                    <bk-input\r\n                        name=\"taskName\"\r\n                        v-model=\"name\"\r\n                        v-validate=\"taskNameRule\">\r\n                    </bk-input>\r\n                    <span v-if=\"errors.has('taskName')\" class=\"common-error-tip error-msg\">{{ errors.first('taskName') }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </bk-dialog>\r\n</template>\r\n<script>\r\n    import '@/utils/i18n.js'\r\n    import { NAME_REG, STRING_LENGTH } from '@/constants/index.js'\r\n\r\n    export default {\r\n        name: 'TaskCloneDialog',\r\n        props: ['isTaskCloneDialogShow', 'taskName', 'pending'],\r\n        data () {\r\n            return {\r\n                name: 'copy' + this.taskName.slice(0, STRING_LENGTH.TASK_NAME_MAX_LENGTH - 4),\r\n                taskNameRule: {\r\n                    required: true,\r\n                    max: STRING_LENGTH.TASK_NAME_MAX_LENGTH,\r\n                    regex: NAME_REG\r\n                },\r\n                i18n: {\r\n                    title: gettext('任务克隆'),\r\n                    template: gettext('任务名称')\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            taskName (val) {\r\n                this.name = 'copy' + val.slice(0, STRING_LENGTH.TASK_NAME_MAX_LENGTH - 4)\r\n            }\r\n        },\r\n        methods: {\r\n            onConfirm () {\r\n                this.$validator.validateAll().then(result => {\r\n                    if (!result) {\r\n                        return\r\n                    }\r\n                    this.name = this.name.trim()\r\n                    this.$emit('confirm', this.name)\r\n                })\r\n            },\r\n            onCancel () {\r\n                this.$emit('cancel')\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    .clone-wrapper {\r\n        padding: 30px 0;\r\n        .common-form-item {\r\n            label {\r\n                font-weight: normal;\r\n                 width:100px;\r\n            }\r\n            .common-form-content {\r\n                margin: 0 30px 0 120px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":""}